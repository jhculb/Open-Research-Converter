[build-system]
requires = ["poetry-core=1.8.3"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "Open Research Converter"
version = "1.0.0"
authors = [
    "Jack Culbert <jack.culbert@gesis.org>",
    "Ahsan Shahid <ahsan.shahid@gesis.org>",
    "Philipp Mayr <philipp.mayr@gesis.org>",
]
maintainers = [
    "Jack Culbert <jack.culbert@gesis.org>",
    "Ahsan Shahid <ahsan.shahid@gesis.org>",
]
description = ""
readme = "README.md"
packages = [{ include = "orc", from = "src" }]
license = "GPL-3.0-or-later"
homepage = "https://orc-demo.gesis.org"


[tool.poetry.dependencies]
python = "^3.11.3"
psycopg = "^3.1.18"
pandas = "^2.2.2"
gunicorn = "^22.0.0"
httpx = "^0.27.0"
requests = "^2.32.3"
pytest-asyncio = "^0.23.8"
aiometer = "^0.5.0"
quart = "^0.19.6"
quart-cors = "^0.7.0"
uvicorn = "^0.30.6"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
bandit = "1.7.5"
check-manifest = "0.49"
pytest-cov = "4.0.0"
pytest-mock = "<3.10.1"
pytest-runner = "*"
pytest = "7.3.0"
shellcheck-py = "0.9.0.5"
coverage = { extras = ["toml"], version = "^7.2.7" }
anybadge = "^1.14.0"
ruff = "^0.5.0"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4

target-version = "py311"

extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "B", "W", "C901", "Q"]
ignore = []

fixable = ["ALL"]
unfixable = ["B"]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"

indent-style = "space"

skip-magic-trailing-comma = false

line-ending = "auto"

docstring-code-format = false

docstring-code-line-length = "dynamic"

[tool.bandit]
exclude_dirs = ["build", "dist", "tests", "scripts"]
number = 4
recursive = true
targets = "src"

[tool.coverage.run]
branch = true
disable_warnings = ['no-data-collected']

[tool.coverage.report]
fail_under = 100

[tool.pyright]
include = ["src"]
exclude = ["**/node_modules", "**/__pycache__"]

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.11"
verboseOutput = true

executionEnvironments = [{ root = "src" }]

[tool.pytest.ini_options]
addopts = "--cov-report xml:coverage.xml --cov-report term --cov src --cov-fail-under 0 --cov-append -m 'not integration'"
pythonpath = ["src"]
testpaths = "tests"
junit_family = "xunit2"
markers = [
    "integration: marks as integration test",
    "notebooks: marks as notebook test",
    "gpu: marks as gpu test",
    "spark: marks tests which need Spark",
    "slow: marks tests as slow",
    "unit: fast offline tests",
]
